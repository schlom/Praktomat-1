#!/bin/bash
# set -x
# $Id: cTestrunner,v 0.1 2017/12/27 21:27:10 R.Hartmann, Experimental $
# Sicherheitsaspekte:
# javac und java sind "relativ" einfach
# via java.security.manager über java.security.policy einstellbar.
# Für C bzw C++ gibt es diese Möglichkeit nicht (daher ist das native
# interface für Java-Einreichungen auch abgeklemmt).
# Sandboxing für C/C++ Einreichungen ohne Docker zu nutzen,
# ist noch unklar: AppArmor ansehen.

# Konfiguration:


# This is a safeguard. Praktomat itself has a timeout (default 60s), but better
# safe than sorry. However ,ulimit -t measures CPU time, so multi-core programs
# can eat more than 60s in one minute. Therefore we use a much higher value
# here.
ulimit -t 600


# Script dir is group writable...
DIRS="bin lib usr/bin usr/lib home/praktomat/inst/pC2020/Praktomat/src/checker/scripts"

# Some logs are produced in the chroot at
# the moment and unfortunately get lost when
# the sandbox is removed. As a quick workaround
# we could add 'tmp' to the DIRS variable (if
# you do so, check die() and remove the rm command).
# but then customers can flood the root fs (since
# /tmp isn't a separate volume in the current
# installation). Maybe we should copy the log after
# leaving the chroot.
LOGFILE="/tmp/cTestrunner_$(date '+%s').log"
#LOGFILE="/dev/null"


#
# Setup und starten
#

function die {

    (
        rm -f tmp/*
        for d in $DIRS ; do
            echo "Unbind $d from sandbox..."
            /bin/fusermount -u $d
            echo "Remove directory $d from sandbox..."
            rmdir -p $d
        done
    ) >> $LOGFILE 2>&1

} # die


trap die EXIT


SCRIPT=`basename $0`
if [ $# == 0 ] ; then
    (>&2 echo "${SCRIPT}: Internal Error: Not enough parameters. Exit.")
    exit 1
fi


if [ "x${1}x" != "x@@x" ] ; then
    (
        echo ""
        echo "start '$(date)'"
        echo "id: $(id -a)"
        echo "params: '$@'"
        echo "cwd: '$PWD'"
        echo "create dirs in sandbox..."

        mkdir -p tmp

        for d in $DIRS ; do
            /bin/mkdir -p $d
            echo "bind /$d into sandbox..."
            /usr/bin/bindfs -r /$d $d
        done

        echo "Rebooting into chroot next '$0' '$@'..."
    ) >> $LOGFILE 2>&1

    fakechroot chroot . "$0" "@@" "$@"
    exit $?

else

    shift
    EXEC="$1"

    if [ -x "${EXEC}" ] ; then
        export LD_LIBRARY_PATH=.
        "./${EXEC}" "$@" 2>&1
        ret=$?
        echo "return code: $ret" >> $LOGFILE
        exit $ret
    else
       (>&2 echo "${SCRIPT}: Internal error: '${EXEC}' does not seem to be an executable. Exit.")
        exit 1
    fi

fi

exit 0