# Generated by Django 2.2.10 on 2020-02-22 19:42

import checker.basemodels
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('checker', '0012_auto_20190408_1427'),
    ]

    operations = [
        migrations.AlterField(
            model_name='checkstylechecker',
            name='configuration',
            field=checker.basemodels.CheckerFileField(help_text='XML configuration of CheckStyle. See https://github.com/checkstyle/checkstyle', max_length=500, upload_to=checker.basemodels.get_checkerfile_storage_path),
        ),
        migrations.AlterField(
            model_name='dejagnusetup',
            name='test_defs',
            field=checker.basemodels.CheckerFileField(help_text='Das Setup benutzt den <a href="https://www.gnu.org/software/dejagnu/">DejaGnu-Testrahmen</a>, um die Programme zu testen. Die in dieser Datei enthaltenen Definitionen gelten für alle Testfälle dieser Aufgabe. Sie werden beim Testen in die DejaGnu-Datei <samp>default.exp</samp> geschrieben. (Vergl. hier zu den Abschnitt <em>Target dependent procedures</em> im    <a href="https://www.gnu.org/software/dejagnu/" target="_blank">DejaGnu-Handbuch</a>.) Die Variablen PROGRAM und JAVA werden mit dem Programmnamen bzw. dem Pfad zur Java-Runtime ersetzt.', max_length=500, upload_to=checker.basemodels.get_checkerfile_storage_path),
        ),
        migrations.AlterField(
            model_name='dejagnutester',
            name='test_case',
            field=checker.basemodels.CheckerFileField(help_text='In den folgenden DejaGnu-Testfällen werden typischerweise Funktionen aufgerufen, die beim vorherigen Schritt <em>Tests einrichten</em> definiert wurden.     Siehe    auch den Abschnitt <em>How to write a test case</em> im <a target="_blank" href="https://www.gnu.org/software/dejagnu/manual/">DejaGnu-Handbuch</a>.', max_length=500, upload_to=checker.basemodels.get_checkerfile_storage_path),
        ),
        migrations.AlterField(
            model_name='linewidthchecker',
            name='max_line_length',
            field=models.IntegerField(default=120, help_text='The maximum length of a line of code.'),
        ),
    ]
